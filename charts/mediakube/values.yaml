debug:
  # this will only set media to the local storage
  useLocalStore: false
  mediaCapacity: 100Gi

#################
# Global config #
#################
global:
  # This section is needed to use NFS for storage
  nfs:
    server: YOUR_NFS_SERVER
  # nfs config path
  configPath: YOUR_CONFIG_PATH
  # local storage path such as /mnt/d/kubestore
  hostPath: "YOUR_LOCAL_STORAGE" # use this path localized storage
  configCapacity: 10Gi # each service will be allocated the same capacity. Divide the total config capacity by the number of services that will be deployed
  # media NFS path
  mediaPath: YOUR_MEDIA_PATH
  mediaCapacity: 15Ti # total capacity of your NFS media share (unless you want a buffer)
  # linuxserver common variables
  timezone: Etc/UTC
  PGID: 1000
  PUID: 1000
  # postgres settings
  postgresUser: "postgres"
  postgresPassword: "YOUR_POSTGRES_PASSWORD"
  # redis settings
  redisUser: "redis"
  redisPassword: "YOUR_REDIS_PASSWORD"

  # other
  radarrMainDb: radarrmain
  radarrLogDb: radarrlog
  bazarrDb: bazarr
  URL: yourdomain.url
  radarrKey: YOUR_RADARR_KEY
  sonarrKey: YOUR_SONARR_KEY

##################
# Network config #
##################
enableTraefikDashboard: true
creds:
  user: administrator
  password: Dashboard

duckdns:
  fullnameOverride: duckdns
  subdomains: YOUR_SUBDOMAINS
  token: YOUR_DNS_TOKEN

swag:
  # Use hostPath for local storage
  hostPath: swag
  fullnameOverride: swag

# https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml  
traefik:
  image:
    pullPolicy: Always
  service:
    type: LoadBalancer
  providers:
    kubernetesCRD:
      allowCrossNamespace: true
      
# https://github.com/authelia/chartrepo/blob/master/charts/authelia/values.yaml
authelia:
  persistence:
    enabled: true
    size: 10Gi
  secret:
    # storageEncryptionKey:
    #   value: 
    storage:
      value: YOUR_POSTGRES_PASSWORD
    redis:
      value: YOUR_REDIS_PASSWORD
  configMap:
    notifier:
      smtp:
        enabled: false
      filesystem:
        enabled: true        
    authentication_backend:
      ldap:
        enabled: false
      file:
        enabled: true
    session:
      redis:
        host: redis
        enabled: true
        enabledSecret: true
    storage: 
      postgres:
        enabled: true
        host: postgres
        port: 5432
        database: authelia
        schema: public
        username: authelia
        timeout: 5s
        tls:
          enabled: false
          skip_verify: true
  ingress:
    enabled: true
    tls:
      enabled: true
      secret: authelia-tls
    traefikCRD:
      enabled: true 
      matchOverride: (Host(`yourdomain.url`) || Host(`localhost`)) && PathPrefix(`/`)
      middlewares:
        auth:
          nameOverride: authelia-auth
          authResponseHeaders:
          - Remote-User
          - Remote-Name
          - Remote-Email
          - Remote-Groups
        chains:
          auth:
            nameOverride: authelia-auth-chain
            # List of Middlewares to apply before the forwardAuth Middleware in the authentication chain.
            before: []
            # before:
            # - name: extra-middleware-name
            #   namespace: default
            # List of Middlewares to apply after the forwardAuth Middleware in the authentication chain.
            after: []
            # after:
            # - name: extra-middleware-name
            #   namespace: default
          ingressRoute:
            # List of Middlewares to apply before the middleware in the IngressRoute chain.
            before: []
            # before:
            # - name: extra-middleware-name
            #   namespace: default

            # List of Middlewares to apply after the middleware in the IngressRoute chain.
            after: []
            # after:
            # - name: extra-middleware-name
            #   namespace: default

########################################
# Service config - local disk required #
########################################
# this section forces use of local storage because of issues with the NFS not allowing startup because it tries to chmod
ombi:
  # Use configPath for NFS... permission issues with nfs creation though
  # configPath: ombi
  # Use hostPath for local storage
  hostPath: ombi
  fullnameOverride: ombi

postgresql:
  # Use configPath for NFS... permission issues with nfs creation though
  # configPath: postgres
  # Use hostPath for local storage
  hostPath: postgres
  fullnameOverride: postgres

redis:
  # Use configPath for NFS... permission issues with nfs creation though
  # configPath: redis
  # Use hostPath for local storage
  hostPath: redis
  fullnameOverride: redis

sonarr:
  # Use configPath for NFS... latency with sqlite
  # configPath: sonarr
  hostPath: sonarr
  fullnameOverride: sonarr
  # # optional
  # config:
  #   UrlBase: /sonarr
  #   PostgresPort: 5432
  #   PostgresHost: postgres
  #   LogLevel: info
  #   UpdateMechanism: Docker
  #   BindAddress: "*"
  #   Port: 8989
  #   SslPort: 9898
  #   EnableSsl: False
  #   LaunchBrowser: True
  #   AuthenticationMethod: None
  #   Branch: main
  #   SslCertHash: 
  #   InstanceName: Sonarr
  #   SyslogPort: 514

#######################################
# Service config - NFS optional mount #
#######################################
radarr:
  configPath: radarr # use only one... host or config
  fullnameOverride: radarr
  # # optional
  # hostPath: radarr # use only one... host or config
  # config:
  #   UrlBase: /radarr
  #   PostgresPort: 5432
  #   PostgresHost: postgres
  #   LogLevel: info
  #   UpdateMechanism: Docker
  #   BindAddress: "*"
  #   Port: 7878
  #   SslPort: 9898
  #   EnableSsl: False
  #   LaunchBrowser: True
  #   AuthenticationMethod: None
  #   Branch: master
  #   SslCertPath: 
  #   SslCertPassword: 
  #   InstanceName: Radarr

transmission:
  configPath: transmission
  # # optional  
  # hostPath: transmission
  fullnameOverride: transmission
  username: YOUR_USERNAME
  password: YOUR_PASSWORD
  vpn:
    username: YOUR_PIA_USERNAME
    password: YOUR_PIA_PASSWORD

prowlarr:
  configPath: prowlarr # use only one... host or config
  fullnameOverride: prowlarr
  # # optional
  # hostPath: prowlarr # use only one... host or config
  # config:
  #   UrlBase: /prowlarr
  #   LogLevel: info
  #   UpdateMechanism: Docker
  #   BindAddress: "*"
  #   Port: 9696
  #   SslPort: 6969
  #   EnableSsl: False
  #   LaunchBrowser: True
  #   AuthenticationMethod: None
  #   Branch: master
  #   SslCertPath: 
  #   SslCertPassword: 
  #   InstanceName: Prowlarr

##################################
# Service config - Still testing #
##################################
lidarr:
  configPath: lidarr # use only one... host or config
  fullnameOverride: lidarr
  # # optional
  # hostPath: lidarr # use only one... host or config
  # config:
  #   UrlBase: /lidarr
  #   LogLevel: info
  #   UpdateMechanism: Docker
  #   BindAddress: "*"
  #   Port: 8686
  #   SslPort: 6868
  #   EnableSsl: False
  #   LaunchBrowser: True
  #   AuthenticationMethod: None
  #   Branch: master
  #   SslCertPath: 
  #   SslCertPassword: 
  #   InstanceName: Lidarr

readarr:
  configPath: readarr # use only one... host or config
  fullnameOverride: readarr
  # # optional
  # hostPath: readarr # use only one... host or config
  # config:
  #   UrlBase: /readarr
  #   LogLevel: info
  #   UpdateMechanism: Docker
  #   BindAddress: "*"
  #   Port: 8787
  #   SslPort: 6868
  #   EnableSsl: False
  #   LaunchBrowser: True
  #   AuthenticationMethod: None
  #   Branch: develop
  #   SslCertPath: 
  #   SslCertPassword: 
  #   InstanceName: Readarr

bazarr:
  configPath: bazarr # use only one... host or config
  fullnameOverride: bazarr
  # # optional
  # hostPath: bazarr # use only one... host or config
  # config:
  #   UrlBase: /bazarr
  #   LogLevel: info
  #   UpdateMechanism: Docker
  #   BindAddress: "*"
  #   Port: 6767
  #   SslPort: 6868
  #   EnableSsl: False
  #   LaunchBrowser: True
  #   AuthenticationMethod: None
  #   Branch: develop
  #   SslCertPath: 
  #   SslCertPassword: 
  #   InstanceName: bazarr

requestrr:
  configPath: requestrr # use only one... host or config
  fullnameOverride: requestrr
  config:
    discordAppId: YOUR_DISCORD_APPID
    discordBotToken: YOUR_DISCORD_BOTTOKEN
    # # optional
    # UrlBase: /requestrr
    # Port: 4545
    # ombi: ombi
    # sonarr: sonarr
    # radarr: radarr
  # # optional
  # configPath: requestrr # use only one... host or config
